import base64
exec(base64.b64decode('aW1wb3J0IHJhbmRvbQppbXBvcnQgdGltZQppbXBvcnQgb3MKZnJvbSBjb2xvcmFtYSBpbXBvcnQgaW5pdCwgRm9yZSwgQmFjaywgU3R5bGUKCiMgSW5pdGlhbGl6ZSBjb2xvcmFtYQppbml0KCkKCmRlZiBjbGVhcl9zY3JlZW4oKToKICAgIG9zLnN5c3RlbSgnY2xlYXInIGlmIG9zLm5hbWUgPT0gJ3Bvc2l4JyBlbHNlICdjbHMnKQoKZGVmIGdlbmVyYXRlX3JhbmRvbV9jb2RlKCk6CiAgICAjIEdlbmVyYXRlIGNvbXBsZXgtbG9va2luZyBoYWNrZXIgY29kZQogICAgZWxlbWVudHMgPSBbXQogICAgcGF0dGVybnMgPSBbCiAgICAgICAgbGFtYmRhOiBzdHIocmFuZG9tLnJhbmRpbnQoMCwgOSkpLAogICAgICAgIGxhbWJkYTogcmFuZG9tLmNob2ljZSgnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonKSwKICAgICAgICBsYW1iZGE6IHJhbmRvbS5jaG9pY2UoJyFAIyQlXiYqKClfKy09W117fXw7OiwuPD4/JyksCiAgICAgICAgbGFtYmRhOiAnLycgaWYgcmFuZG9tLnJhbmRvbSgpID4gMC44IGVsc2UgJ1xcJwogICAgXQogICAgCiAgICBmb3IgXyBpbiByYW5nZShyYW5kb20ucmFuZGludCgyNSwgNDApKToKICAgICAgICBlbGVtZW50cy5hcHBlbmQocmFuZG9tLmNob2ljZShwYXR0ZXJucykoKSkKICAgIAogICAgIyBKb2luIHdpdGggcmFuZG9tIHNlcGFyYXRvcnMKICAgIHNlcGFyYXRvcnMgPSBbJy4nLCAnOicsICd8JywgJy0nLCAnXycsICcnXQogICAgcmV0dXJuICcnLmpvaW4oW2VsICsgcmFuZG9tLmNob2ljZShzZXBhcmF0b3JzKSBmb3IgZWwgaW4gZWxlbWVudHNdKVs6LTFdCgpkZWYgZGlzcGxheV9oZWFkZXIoKToKICAgIGNsZWFyX3NjcmVlbigpCiAgICBwcmludChGb3JlLkdSRUVOICsgU3R5bGUuQlJJR0hUICsgciIiIgogICBfX19fXyBfICAgICAgICAgICBfICAgICAgX19fICBfX19fXyBfICAgXyBfX19fXyBfX19fXyAKICAvIF9fX198IHwgICAgICAgICB8IHwgICAgLyBfIFx8XyAgIF98IHwgfCB8XyAgIF98XyAgIF98CiB8IChfX18gfCB8X18gICBfXyBffCB8XyAgfCB8IHwgfCB8IHwgfCB8X3wgfCB8IHwgICB8IHwgIAogIFxfX18gXHwgJ18gXCAvIF9gIHwgX198IHwgfCB8IHwgfCB8IHwgIF8gIHwgfCB8ICAgfCB8ICAKICBfX19fKSB8IHwgfCB8IChffCB8IHxfICB8IHxffCB8X3wgfF98IHwgfCB8X3wgfF8gX3wgfF8gCiB8X19fX18vfF98IHxffFxfXyxffFxfX3wgIFxfX18vfF9fX19ffF98IHxffF9fX19ffF9fX19ffAogICAgIiIiICsgRm9yZS5DWUFOICsgciIiIgogICBfX19fXyBfX19fXyBfICAgXyBfX19fX19fICAgIF9fX19fIF8gICAgXyBfX19fX18gCiAgLyBfX19ffF8gICBffCBcIHwgfF9fICAgX198ICAvIF9fX198IHwgIHwgfCAgX19fX3wKIHwgfCAgICAgIHwgfCB8ICBcfCB8ICB8IHwgICAgfCB8ICAgIHwgfF9ffCB8IHxfXyAgIAogfCB8ICAgICAgfCB8IHwgLiBgIHwgIHwgfCAgICB8IHwgICAgfCAgX18gIHwgIF9ffCAgCiB8IHxfX19fIF98IHxffCB8XCAgfCAgfCB8ICAgIHwgfF9fX198IHwgIHwgfCB8X19fXyAKICBcX19fX198X19fX198X3wgXF98ICB8X3wgICAgIFxfX19fX3xffCAgfF98X19fX19ffAogICAgIiIiICsgU3R5bGUuUkVTRVRfQUxMKQogICAgcHJpbnQoRm9yZS5NQUdFTlRBICsgU3R5bGUuQlJJR0hUICsgIlxuID4+IENPREVEIEJZIEFMSVJFWkFfSEVST0lOIDw8IiArIFN0eWxlLlJFU0VUX0FMTCkKICAgIHByaW50KEZvcmUuUkVEICsgIiBbIiArIEZvcmUuWUVMTE9XICsgIj0iICogNDAgKyBGb3JlLlJFRCArICJdIiArIFN0eWxlLlJFU0VUX0FMTCkKCmRlZiBtYWluX21lbnUoKToKICAgIGRpc3BsYXlfaGVhZGVyKCkKICAgIHByaW50KEZvcmUuQ1lBTiArIFN0eWxlLkJSSUdIVCArICJcbiBbMV0gQUNDT1VOVCIpCiAgICBwcmludChGb3JlLkJMVUUgKyAiIFsyXSBDSEFOTkVMIikKICAgIHByaW50KEZvcmUuR1JFRU4gKyAiIFszXSBHUk9VUCIpCiAgICBwcmludChGb3JlLlJFRCArICIgWzRdIEVYSVQgU1lTVEVNIiArIFN0eWxlLlJFU0VUX0FMTCkKICAgIAogICAgd2hpbGUgVHJ1ZToKICAgICAgICB0cnk6CiAgICAgICAgICAgIGNob2ljZSA9IGludChpbnB1dChGb3JlLllFTExPVyArICJcbiBbPj5dIFNFTEVDVCBPUFRJT046ICIgKyBTdHlsZS5SRVNFVF9BTEwpKQogICAgICAgICAgICBpZiAxIDw9IGNob2ljZSA8PSA0OgogICAgICAgICAgICAgICAgcmV0dXJuIGNob2ljZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQoRm9yZS5SRUQgKyAiIFshXSBJTlZBTElEIElOUFVUOiAxLTQgT05MWSIgKyBTdHlsZS5SRVNFVF9BTEwpCiAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgICAgIHByaW50KEZvcmUuUkVEICsgIiBbIV0gTlVNQkVSUyBPTkxZIFBMRUFTRSIgKyBTdHlsZS5SRVNFVF9BTEwpCgpkZWYgcHJvY2Vzc19vcHRpb24ob3B0aW9uKToKICAgIGRpc3BsYXlfaGVhZGVyKCkKICAgIG9wdGlvbl9uYW1lcyA9IHsxOiAiQUNDT1VOVCIsIDI6ICJDSEFOTkVMIiwgMzogIkdST1VQIn0KICAgIHByaW50KEZvcmUuR1JFRU4gKyBTdHlsZS5CUklHSFQgKyBmIlxuIFsqXSBHRU5FUkFUSU5HIHtvcHRpb25fbmFtZXNbb3B0aW9uXX0gQUNDRVNTIENPREUuLi4iICsgU3R5bGUuUkVTRVRfQUxMKQogICAgCiAgICAjIFNpbXVsYXRlIGhhY2tpbmcgcHJvY2VzcwogICAgcHJpbnQoRm9yZS5CTFVFICsgIlxuIFsqXSBJTklUSUFMSVpJTkcgQ1lQSEVSIFNFUVVFTkNFLi4uIikKICAgIHRpbWUuc2xlZXAoMSkKICAgIHByaW50KCIgWypdIEJZUEFTU0lORyBTRUNVUklUWSBMQVlFUlMuLi4iKQogICAgdGltZS5zbGVlcCgxLjIpCiAgICBwcmludCgiIFsqXSBFTkNSWVBUSU5HIFBBWUxPQUQuLi4iKQogICAgdGltZS5zbGVlcCgwLjgpCiAgICBwcmludCgiIFsqXSBFU1RBQkxJU0hJTkcgQ09OTkVDVElPTi4uLiIpCiAgICB0aW1lLnNsZWVwKDEuNSkKICAgIAogICAgIyBHZW5lcmF0ZSBhbmQgZGlzcGxheSB0aGUgY29kZQogICAgY29kZSA9IGdlbmVyYXRlX3JhbmRvbV9jb2RlKCkKICAgIHByaW50KEZvcmUuWUVMTE9XICsgU3R5bGUuQlJJR0hUICsgIlxuIFsrXSBBQ0NFU1MgQ09ERSBHRU5FUkFURUQ6XG4iKQogICAgcHJpbnQoRm9yZS5NQUdFTlRBICsgZiIgWz4+XSB7Y29kZX0iICsgU3R5bGUuUkVTRVRfQUxMKQogICAgCiAgICBpbnB1dChGb3JlLkNZQU4gKyAiXG4gW1BSRVNTIEVOVEVSIFRPIENPTlRJTlVFLi4uXSIgKyBTdHlsZS5SRVNFVF9BTEwpCgpkZWYgbWFpbigpOgogICAgdHJ5OgogICAgICAgIHdoaWxlIFRydWU6CiAgICAgICAgICAgIGNob2ljZSA9IG1haW5fbWVudSgpCiAgICAgICAgICAgIGlmIGNob2ljZSA9PSA0OgogICAgICAgICAgICAgICAgZGlzcGxheV9oZWFkZXIoKQogICAgICAgICAgICAgICAgcHJpbnQoRm9yZS5SRUQgKyBTdHlsZS5CUklHSFQgKyAiXG4gWypdIFRFUk1JTkFUSU5HIFNFU1NJT04uLi4iKQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgxKQogICAgICAgICAgICAgICAgcHJpbnQoIiBbKl0gV0lQSU5HIFRSQUNFUy4uLiIpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuOCkKICAgICAgICAgICAgICAgIHByaW50KCIgWyFdIFNZU1RFTSBPRkZMSU5FIiArIFN0eWxlLlJFU0VUX0FMTCkKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcm9jZXNzX29wdGlvbihjaG9pY2UpCiAgICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6CiAgICAgICAgcHJpbnQoRm9yZS5SRUQgKyAiXG4gWyFdIFNFU1NJT04gSU5URVJSVVBURUQiICsgU3R5bGUuUkVTRVRfQUxMKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIG1haW4oKQ=='))